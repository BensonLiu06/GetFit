from tkinter import *
from tkinter import ttk
import os

# Implementation for user registration window
def registerUserWindow():
    global userRegistrationWindow

    userRegistrationWindow = Toplevel(mainWindow)
    userRegistrationWindow.title("Register")

    w = 300
    h = 250
    #w = l1.winfo_reqwidth()
    #h = l1.winfo_reqheight()
    ws = mainWindow.winfo_screenwidth()
    hs = mainWindow.winfo_screenheight()
    x = (ws/2) - (w/2)
    y = (hs/2) - (h/2)
    print(w, h, x, y)
    userRegistrationWindow.geometry('%dx%d+%d+%d' % (w, h, x, y))

    global username
    global password
    global usernameField
    global passwordField
    username = StringVar()
    password = StringVar()

    Label(userRegistrationWindow, text = "To register for a GetFit profile,", bg="blue").pack()
    Label(userRegistrationWindow, text = "please enter details below", bg="blue").pack()
    Label(userRegistrationWindow, text = "").pack()
    usernameLabel = Label(userRegistrationWindow, text = "Username * ")
    usernameLabel.pack()
    usernameField = Entry(userRegistrationWindow, textvariable = username)
    usernameField.pack()
    passwordLabel = Label(userRegistrationWindow, text = "Password * ")
    passwordLabel.pack()
    passwordField = Entry(userRegistrationWindow, textvariable = password, show = '*')
    passwordField.pack()
    Label(userRegistrationWindow, text = "").pack()
    Button(userRegistrationWindow, text = "Register", width=10, height=1, bg="blue", command = registerUser).pack()

# Implementation for user login window
def loginUserWindow():
    global userLoginWindow
    userLoginWindow = Toplevel(mainWindow)
    userLoginWindow.title("Login")
    userLoginWindow.geometry("300x250")
    Label(userLoginWindow, text = "Please enter details below to login").pack()
    Label(userLoginWindow, text = "").pack()

    global verifyUsername
    global verifyPassword

    verifyUsername = StringVar()
    verifyPassword = StringVar()

    global usernameLoginField
    global passwordLoginField

    Label(userLoginWindow, text = "Username * ").pack()
    usernameLoginField = Entry(userLoginWindow, textvariable = verifyUsername)
    usernameLoginField.pack()
    Label(userLoginWindow, text = "").pack()
    Label(userLoginWindow, text = "Password * ").pack()
    passwordLoginField = Entry(userLoginWindow, textvariable = verifyPassword, show = '*')
    passwordLoginField.pack()
    Label(userLoginWindow, text = "").pack()
    Button(userLoginWindow, text = "Login", width=10, height=1, command = verifyLogin).pack()

# Implemention for register button event
def registerUser():

    usernameInfo = username.get()
    passwordInfo = password.get()

    if not usernameInfo:
        userNameIsNull()
    elif not passwordInfo:
        passwordIsNull()
    else:
        file = open(usernameInfo, "w")
        file.write(usernameInfo + "\n")
        file.write(passwordInfo)
        file.close()

        usernameField.delete(0, END)
        passwordField.delete(0, END)

        userRegistrationWindow.destroy()
        userRegistrationSucessful()


        #Label(userRegistrationWindow, text="Registration Success", fg="green", font=("calibri", 11)).pack()

# Implementation for login button event

def verifyLogin():
    username1 = verifyUsername.get()
    password1 = verifyPassword.get()
    usernameLoginField.delete(0, END)
    passwordLoginField.delete(0, END)

    list_of_files = os.listdir()
    if username1 in list_of_files:
        file1 = open(username1, "r")
        verify = file1.read().splitlines()
        if password1 in verify:
            loginSucessful()

        else:
            invalidPassword()

    else:
        userNotFound()

# Implementation for login successful popup dialog box
def loginSucessful():
    global loginSuccessfulWindow
    loginSuccessfulWindow = Toplevel(mainWindow)
    loginSuccessfulWindow.title("Success")

    # Calculate the geometry to center the dialog box on the screen
    w = loginSuccessfulWindow.winfo_reqwidth()
    h = loginSuccessfulWindow.winfo_reqheight()
    ws = mainWindow.winfo_screenwidth()
    hs = mainWindow.winfo_screenheight()
    x = (ws/2) - (w/2)
    y = (hs/2) - (h/2)
    loginSuccessfulWindow.geometry('%dx%d+%d+%d' % (w, h, x, y))

    Label(loginSuccessfulWindow, text = "User login was sucessful", padx = '3', pady = '3').pack()
    Button(loginSuccessfulWindow, text = "OK", command=dismissLoginSuccessfulWindow).pack()

# Implementation for invalid login password popup dialog box
def invalidPassword():
    global invalidPasswordWindow
    invalidPasswordWindow = Toplevel(mainWindow)
    invalidPasswordWindow.title("Error")

    # Calculate the geometry to center the dialog box on the screen
    w = invalidPasswordWindow.winfo_reqwidth()
    h = invalidPasswordWindow.winfo_reqheight()
    ws = mainWindow.winfo_screenwidth()
    hs = mainWindow.winfo_screenheight()
    x = (ws/2) - (w/2)
    y = (hs/2) - (h/2)
    invalidPasswordWindow.geometry('%dx%d+%d+%d' % (w, h, x, y))

    Label(invalidPasswordWindow, text = "Password was invalid", padx = '3', pady = '3').pack()
    Button(invalidPasswordWindow, text = "OK", command=dismissInvalidPasswordWindow).pack()

# Implementation for user not found popup dialog box
def userNotFound():
    global userNotFoundWindow
    userNotFoundWindow = Toplevel(mainWindow)
    userNotFoundWindow.title("Error")

    # Calculate the geometry to center the dialog box on the screen
    w = userNotFoundWindow.winfo_reqwidth()
    h = userNotFoundWindow.winfo_reqheight()
    ws = mainWindow.winfo_screenwidth()
    hs = mainWindow.winfo_screenheight()
    x = (ws/2) - (w/2)
    y = (hs/2) - (h/2)
    userNotFoundWindow.geometry('%dx%d+%d+%d' % (w, h, x, y))

    Label(userNotFoundWindow, text = "Username was not found", padx = '3', pady = '3').pack()
    Button(userNotFoundWindow, text = "OK", command=dismissUserNotFoundWindow).pack()

# Implementation for username is null popup dialog box
def userNameIsNull():
    global userNameIsNullErrorWindow
    userNameIsNullErrorWindow = Toplevel(userRegistrationWindow)
    userNameIsNullErrorWindow.title("Error")

    # Calculate the geometry to center the dialog box on the screen
    w = userNameIsNullErrorWindow.winfo_reqwidth()
    h = userNameIsNullErrorWindow.winfo_reqheight()
    ws = mainWindow.winfo_screenwidth()
    hs = mainWindow.winfo_screenheight()
    x = (ws/2) - (w/2)
    y = (hs/2) - (h/2)
    userNameIsNullErrorWindow.geometry('%dx%d+%d+%d' % (w, h, x, y))

    Label(userNameIsNullErrorWindow, text = "Username is null", padx = '3', pady = '3').pack()
    Button(userNameIsNullErrorWindow, text = "OK", command=dismissUserNameIsNullErrorWindow).pack()

# Implementation for password is null popup dialog box
def passwordIsNull():
    global passwordIsNullErrorWindow
    passwordIsNullErrorWindow = Toplevel(userRegistrationWindow)
    passwordIsNullErrorWindow.title("Error")

    # Calculate the geometry to center the dialog box on the screen
    w = passwordIsNullErrorWindow.winfo_reqwidth()
    h = passwordIsNullErrorWindow.winfo_reqheight()
    ws = mainWindow.winfo_screenwidth()
    hs = mainWindow.winfo_screenheight()
    x = (ws/2) - (w/2)
    y = (hs/2) - (h/2)
    passwordIsNullErrorWindow.geometry('%dx%d+%d+%d' % (w, h, x, y))

    Label(passwordIsNullErrorWindow, text = "Password is null",  padx = '3', pady = '3').pack()
    Button(passwordIsNullErrorWindow, text = "OK", command=dismissPasswordIsNullErrorWindow).pack()

def userRegistrationSucessful():
    global userRegistrationSuccessfulWindow
    userRegistrationSuccessfulWindow = Toplevel(mainWindow)
    userRegistrationSuccessfulWindow.title("Success")
    
    # Calculate the geometry to center the dialog box on the screen
    w = userRegistrationSuccessfulWindow.winfo_reqwidth()
    h = userRegistrationSuccessfulWindow.winfo_reqheight()
    ws = mainWindow.winfo_screenwidth()
    hs = mainWindow.winfo_screenheight()
    x = (ws/2) - (w/2)
    y = (hs/2) - (h/2)
    userRegistrationSuccessfulWindow.geometry('%dx%d+%d+%d' % (w, h, x, y))
    
    Label(userRegistrationSuccessfulWindow, text = "User regisration was sucessful",  padx = '3', pady = '3').pack()
    Button(userRegistrationSuccessfulWindow, text = "OK", command=dismissUserRegisrationSuccessfulWindow).pack()


# Implemention of dismissals of popup dialog box
def dismissLoginSuccessfulWindow():
    loginSuccessfulWindow.destroy()

def dismissInvalidPasswordWindow():
    invalidPasswordWindow.destroy()

def dismissUserNotFoundWindow():
    userNotFoundWindow.destroy()

def dismissUserNameIsNullErrorWindow():
    userNameIsNullErrorWindow.destroy()

def dismissPasswordIsNullErrorWindow():
    passwordIsNullErrorWindow.destroy()

def dismissUserRegisrationSuccessfulWindow():
    userRegistrationSuccessfulWindow.destroy()


# Implementation of main window

def mainAppWindow():
    global mainWindow
    mainWindow = Tk()
    
    # Set the width and height of the main window
    w = 600 # Width 
    h = 400 # Height
 
    # Determine the size of the screen
    screen_width =  mainWindow.winfo_screenwidth()  # Width of the screen
    screen_height = mainWindow.winfo_screenheight() # Height of the screen
 
    # Calculate starting x and y coordinates for the main window
    x = (screen_width/2) - (w/2)
    y = (screen_height/2) - (h/2)
 
    mainWindow.geometry('%dx%d+%d+%d' % (w, h, x, y))
    mainWindow.resizable(True, True)
    mainWindow.title("GetFit")
    mainWindow.columnconfigure(0, weight = 1)
    mainWindow.columnconfigure(1, weight = 1)
    mainWindow.rowconfigure(0, weight = 1)
    mainWindow.rowconfigure(1, weight = 1)
    mainWindow.rowconfigure(2, weight = 1)
    mainWindow.rowconfigure(3, weight = 1)
    mainWindow.rowconfigure(4, weight = 1)
    mainWindow.rowconfigure(5, weight = 1)
    mainWindow.rowconfigure(6, weight = 1)
    mainWindow.rowconfigure(7, weight = 1)
    mainWindow.rowconfigure(8, weight = 1)


    # Create all the main frame containers
    topFrame = Frame(mainWindow, width=590, height = 100, pady = 5)
    leftFrame = Frame(mainWindow, width = 290, height = 300, pady = 5, relief='groove', borderwidth = 2)
    rightFrame = Frame(mainWindow, width = 290, height = 300, pady = 5, relief='groove', borderwidth = 2)

    # Layout all of the main frame containers
    topFrame.grid(row = 0, columnspan = 2, sticky = "ew")
    leftFrame.grid(column = 0, row = 1, sticky = "nsew")
    rightFrame.grid(column = 1, row = 1, sticky = "nsew")

    # Create label widget
    label1 = Label(topFrame, text = "Sign in to GetFit", width = 20, anchor = 'center')
    label1.grid(row = 0, columnspan = 2)

    # Create label widget
    label2 = Label(leftFrame, text = "Username", width = "30", anchor = 'w')
    label2.grid(column = 0, row = 1)

    global verifyUsername
    global verifyPassword

    verifyUsername = StringVar()
    verifyPassword = StringVar()


    global userNameField
    global usernameLoginField


    # Create entry widget
    userNameField = Entry(leftFrame, textvariable = verifyUsername, bd = 3, width = 30)
    userNameField.grid(column = 0, row = 2)
    userNameField.anchor = 'w'
    userNameField.focus_force() 
    usernameLoginField = userNameField

    # Create label widget
    label3 = Label(leftFrame, text = "Enter your username", width = "30", anchor = 'w')
    label3.grid(column = 0, row = 3)
    
    # Create label widget
    label4 = Label(leftFrame,text = "", width = "30", anchor = 'w')
    label4.grid(column = 0,row = 4)

    # Create label widget
    label5 = Label(leftFrame,text = "Password", width = "30", anchor = 'w')
    label5.grid(column = 0, row = 5)

    global passwordField
    global passwordLoginField

    # Create entry widget
    passwordField = Entry(leftFrame, bd = 3, width = 30, textvariable = verifyPassword, show = '*')
    passwordField.grid(column = 0, row = 6)
    passwordLoginField = passwordField

    # Create label widget
    label6 = Label(leftFrame,text = "", width = "30", anchor = 'w')
    label6.grid(column = 0, row = 7)

    # Create button widget for sign in
    button1 = Button(leftFrame, text = "Sign in", command = verifyLogin)
    button1.grid(column = 0, row = 8)
    
    # Create button widget to register a new user
    button2 = Button(rightFrame, text = "Register a new user", command = registerUserWindow)
    button2.grid(column = 1, row = 8)

    mainWindow.mainloop()


mainAppWindow()

